/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    exam: Exam;
    leads: Lead;
    post: Post;
    'download-menus': DownloadMenu;
    'sub-folders': SubFolder;
    'exam-category': ExamCategory;
    'exam-info': ExamInfo;
    'exam-sub-info': ExamSubInfo;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    exam: ExamSelect<false> | ExamSelect<true>;
    leads: LeadsSelect<false> | LeadsSelect<true>;
    post: PostSelect<false> | PostSelect<true>;
    'download-menus': DownloadMenusSelect<false> | DownloadMenusSelect<true>;
    'sub-folders': SubFoldersSelect<false> | SubFoldersSelect<true>;
    'exam-category': ExamCategorySelect<false> | ExamCategorySelect<true>;
    'exam-info': ExamInfoSelect<false> | ExamInfoSelect<true>;
    'exam-sub-info': ExamSubInfoSelect<false> | ExamSubInfoSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam".
 */
export interface Exam {
  id: string;
  examName: string;
  /**
   * Select or create exam category
   */
  category?: (string | null) | ExamCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage exam categories
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-category".
 */
export interface ExamCategory {
  id: string;
  /**
   * Category name for the exam
   */
  categoryName: string;
  /**
   * SEO title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO keywords for search engines
   */
  seo_keyword?: string | null;
  /**
   * SEO description for search engines
   */
  seo_description?: string | null;
  /**
   * Select exams for this category
   */
  exams?: (string | Exam)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads".
 */
export interface Lead {
  id: string;
  name: string;
  email: string;
  country: string;
  countryCode: string;
  mobile: string;
  class: '6' | '7' | '8' | '9' | '10' | '11' | '12' | '12+';
  message?: string | null;
  submissionDetails?: {
    ipAddress?: string | null;
    referrerUrl?: string | null;
    currentUrl?: string | null;
    timestamp?: string | null;
    source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post".
 */
export interface Post {
  id: string;
  title: string;
  author?: string | null;
  publishedDate?: string | null;
  layout?:
    | (
        | {
            headline?: string | null;
            subheadline?: string | null;
            background?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            title?: string | null;
            listType?: ('bullet' | 'number' | 'checklist') | null;
            items?:
              | {
                  text: string;
                  description?: string | null;
                  checked?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'list';
          }
        | {
            image?: (string | null) | Media;
            alt?: string | null;
            caption?: string | null;
            imageType?: ('fullWidth' | 'bookPreview' | 'regular') | null;
            bookDetails?: {
              bookTitle?: string | null;
              author?: string | null;
              publisher?: string | null;
              isbn?: string | null;
              pages?: number | null;
              price?: string | null;
              description?: string | null;
              downloadLink?: string | null;
              previewPages?: number | null;
            };
            fullWidth?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'image';
          }
        | {
            url?: string | null;
            title?: string | null;
            start?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'youtube';
          }
        | {
            buttons?:
              | {
                  text?: string | null;
                  url?: string | null;
                  variant?: ('primary' | 'secondary') | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'buttonRow';
          }
        | {
            html?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'htmlEmbed';
          }
        | {
            title?: string | null;
            columns?:
              | {
                  name?: string | null;
                  id?: string | null;
                }[]
              | null;
            rows?:
              | {
                  cells?:
                    | {
                        value?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'table';
          }
        | {
            /**
             * Upload a PDF file to preview inline
             */
            file?: (string | null) | Media;
            title?: string | null;
            height?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pdf';
          }
        | {
            title: string;
            author: string;
            publisher?: string | null;
            isbn?: string | null;
            pages?: number | null;
            price?: string | null;
            description?: string | null;
            coverImage?: (string | null) | Media;
            previewImages?:
              | {
                  image: string | Media;
                  pageNumber?: number | null;
                  caption?: string | null;
                  id?: string | null;
                }[]
              | null;
            downloadLink?: string | null;
            buyLink?: string | null;
            rating?: number | null;
            featured?: boolean | null;
            categories?: ('jee' | 'neet' | 'sat' | 'study' | 'practice' | 'reference')[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage download menus for different exam types
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download-menus".
 */
export interface DownloadMenu {
  id: string;
  /**
   * e.g., Study Material, Sample Papers, Answer Keys, Past Year Papers
   */
  name: string;
  /**
   * Select the exam type this menu is for
   */
  exam: 'JEE Main' | 'JEE Advanced' | 'NEET' | 'GATE' | 'UPSC' | 'All Exams';
  /**
   * Order in which this menu appears (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Add sub folders to organize content within this menu
   */
  subFolders?: (string | SubFolder)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Organize content within download menus using sub folders
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub-folders".
 */
export interface SubFolder {
  id: string;
  /**
   * e.g., Physics Sample Paper, Chemistry Sample Papers
   */
  name: string;
  /**
   * Display order within the parent menu (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Add multiple files for this sub folder
   */
  files?:
    | {
        /**
         * e.g., Physics Test 9, Chemistry Test 1 Solutions
         */
        title: string;
        /**
         * Enter the URL of the file
         */
        url: string;
        /**
         * Select the type of file
         */
        fileType: 'PDF File' | 'Word Document' | 'Excel Sheet' | 'Image' | 'Video' | 'Other';
        /**
         * Whether this file requires contact form submission to download
         */
        locked?: boolean | null;
        /**
         * Display order within sub folder (lower numbers first)
         */
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage exam information and study materials
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-info".
 */
export interface ExamInfo {
  id: string;
  /**
   * e.g., JEE Main Study Guide, NEET Preparation Materials, SAT Practice Tests
   */
  title: string;
  /**
   * Select the exam this information is for
   */
  exam: string | Exam;
  /**
   * Order in which this information appears (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Add multiple files for this sub folder
   */
  files?:
    | {
        /**
         * e.g., Physics Test 9, Chemistry Test 1 Solutions
         */
        title: string;
        /**
         * Enter the URL of the file
         */
        url: string;
        /**
         * Select the type of file
         */
        fileType: 'PDF File' | 'Word Document' | 'Excel Sheet' | 'Image' | 'Video' | 'Other';
        /**
         * Display order within sub folder (lower numbers first)
         */
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Organize exam information using sub information sections
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-sub-info".
 */
export interface ExamSubInfo {
  id: string;
  title: string;
  /**
   * Select which exam information this sub info belongs to
   */
  parentInfo: string | ExamInfo;
  /**
   * Display order within the parent exam info (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'exam';
        value: string | Exam;
      } | null)
    | ({
        relationTo: 'leads';
        value: string | Lead;
      } | null)
    | ({
        relationTo: 'post';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'download-menus';
        value: string | DownloadMenu;
      } | null)
    | ({
        relationTo: 'sub-folders';
        value: string | SubFolder;
      } | null)
    | ({
        relationTo: 'exam-category';
        value: string | ExamCategory;
      } | null)
    | ({
        relationTo: 'exam-info';
        value: string | ExamInfo;
      } | null)
    | ({
        relationTo: 'exam-sub-info';
        value: string | ExamSubInfo;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam_select".
 */
export interface ExamSelect<T extends boolean = true> {
  examName?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads_select".
 */
export interface LeadsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  country?: T;
  countryCode?: T;
  mobile?: T;
  class?: T;
  message?: T;
  submissionDetails?:
    | T
    | {
        ipAddress?: T;
        referrerUrl?: T;
        currentUrl?: T;
        timestamp?: T;
        source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post_select".
 */
export interface PostSelect<T extends boolean = true> {
  title?: T;
  author?: T;
  publishedDate?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              headline?: T;
              subheadline?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              body?: T;
              id?: T;
              blockName?: T;
            };
        list?:
          | T
          | {
              title?: T;
              listType?: T;
              items?:
                | T
                | {
                    text?: T;
                    description?: T;
                    checked?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        image?:
          | T
          | {
              image?: T;
              alt?: T;
              caption?: T;
              imageType?: T;
              bookDetails?:
                | T
                | {
                    bookTitle?: T;
                    author?: T;
                    publisher?: T;
                    isbn?: T;
                    pages?: T;
                    price?: T;
                    description?: T;
                    downloadLink?: T;
                    previewPages?: T;
                  };
              fullWidth?: T;
              id?: T;
              blockName?: T;
            };
        youtube?:
          | T
          | {
              url?: T;
              title?: T;
              start?: T;
              id?: T;
              blockName?: T;
            };
        buttonRow?:
          | T
          | {
              buttons?:
                | T
                | {
                    text?: T;
                    url?: T;
                    variant?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        htmlEmbed?:
          | T
          | {
              html?: T;
              id?: T;
              blockName?: T;
            };
        table?:
          | T
          | {
              title?: T;
              columns?:
                | T
                | {
                    name?: T;
                    id?: T;
                  };
              rows?:
                | T
                | {
                    cells?:
                      | T
                      | {
                          value?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        pdf?:
          | T
          | {
              file?: T;
              title?: T;
              height?: T;
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              title?: T;
              author?: T;
              publisher?: T;
              isbn?: T;
              pages?: T;
              price?: T;
              description?: T;
              coverImage?: T;
              previewImages?:
                | T
                | {
                    image?: T;
                    pageNumber?: T;
                    caption?: T;
                    id?: T;
                  };
              downloadLink?: T;
              buyLink?: T;
              rating?: T;
              featured?: T;
              categories?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download-menus_select".
 */
export interface DownloadMenusSelect<T extends boolean = true> {
  name?: T;
  exam?: T;
  sortOrder?: T;
  subFolders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub-folders_select".
 */
export interface SubFoldersSelect<T extends boolean = true> {
  name?: T;
  order?: T;
  files?:
    | T
    | {
        title?: T;
        url?: T;
        fileType?: T;
        locked?: T;
        order?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-category_select".
 */
export interface ExamCategorySelect<T extends boolean = true> {
  categoryName?: T;
  seo_title?: T;
  seo_keyword?: T;
  seo_description?: T;
  exams?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-info_select".
 */
export interface ExamInfoSelect<T extends boolean = true> {
  title?: T;
  exam?: T;
  sortOrder?: T;
  files?:
    | T
    | {
        title?: T;
        url?: T;
        fileType?: T;
        order?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-sub-info_select".
 */
export interface ExamSubInfoSelect<T extends boolean = true> {
  title?: T;
  parentInfo?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}