/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    exam: Exam;
    leads: Lead;
    post: Post;
    'download-menus': DownloadMenu;
    'sub-folders': SubFolder;
    'exam-category': ExamCategory;
    'exam-info': ExamInfo;
    'exam-sub-info': ExamSubInfo;
    'blog-comments': BlogComment;
    'blog-comment-replies': BlogCommentReply;
    courses: Course;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    exam: ExamSelect<false> | ExamSelect<true>;
    leads: LeadsSelect<false> | LeadsSelect<true>;
    post: PostSelect<false> | PostSelect<true>;
    'download-menus': DownloadMenusSelect<false> | DownloadMenusSelect<true>;
    'sub-folders': SubFoldersSelect<false> | SubFoldersSelect<true>;
    'exam-category': ExamCategorySelect<false> | ExamCategorySelect<true>;
    'exam-info': ExamInfoSelect<false> | ExamInfoSelect<true>;
    'exam-sub-info': ExamSubInfoSelect<false> | ExamSubInfoSelect<true>;
    'blog-comments': BlogCommentsSelect<false> | BlogCommentsSelect<true>;
    'blog-comment-replies': BlogCommentRepliesSelect<false> | BlogCommentRepliesSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Manage admin users and editors
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  /**
   * Sequential user ID (auto-generated)
   */
  customId?: number | null;
  /**
   * User role and permissions
   */
  role: 'admin' | 'editor' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Manage uploaded files and media
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Sequential media ID (auto-generated)
   */
  customId: number;
  /**
   * Alternative text for accessibility
   */
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Manage individual exams
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam".
 */
export interface Exam {
  id: string;
  /**
   * Sequential exam ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the exam (e.g., JEE Main, NEET, GATE)
   */
  examName: string;
  /**
   * Select the category this exam belongs to
   */
  category: string | ExamCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage exam categories
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-category".
 */
export interface ExamCategory {
  id: string;
  /**
   * Sequential category ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the exam category (e.g., Engineering, Medical, Management)
   */
  categoryName: string;
  /**
   * Exams that belong to this category (auto-populated)
   */
  exams?: (string | Exam)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage contact leads and inquiries
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads".
 */
export interface Lead {
  id: string;
  /**
   * Sequential lead ID (auto-generated)
   */
  customId: number;
  name: string;
  email: string;
  country: string;
  countryCode: string;
  mobile: string;
  class: '6' | '7' | '8' | '9' | '10' | '11' | '12' | '12+';
  message?: string | null;
  submissionDetails?: {
    ipAddress?: string | null;
    referrerUrl?: string | null;
    currentUrl?: string | null;
    timestamp?: string | null;
    source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage blog posts and articles
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post".
 */
export interface Post {
  id: string;
  /**
   * Sequential post ID (auto-generated)
   */
  customId: number;
  /**
   * Title of the blog post
   */
  title: string;
  /**
   * URL-friendly version of the title (auto-generated)
   */
  slug: string;
  /**
   * Main content of the blog post
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Select the exam this blog post is related to
   */
  exam: string | Exam;
  /**
   * Select the category this blog post belongs to
   */
  category: string | ExamCategory;
  /**
   * SEO-optimized title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO-optimized description for search engines
   */
  seo_description?: string | null;
  /**
   * Keywords for search engine optimization
   */
  seo_keywords?: string | null;
  /**
   * User who created this blog post
   */
  created_by: string | User;
  /**
   * User who last updated this blog post
   */
  updated_by?: (string | null) | User;
  /**
   * Main image for the blog post
   */
  blog_image?: (string | null) | Media;
  /**
   * Publication and approval status of the blog post
   */
  status: 'published' | 'unpublished' | 'approved' | 'unapproved';
  /**
   * Date when the blog post was published
   */
  publishedDate?: string | null;
  layout?:
    | (
        | {
            headline?: string | null;
            subheadline?: string | null;
            background?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            title?: string | null;
            listType?: ('bullet' | 'number' | 'checklist') | null;
            items?:
              | {
                  text: string;
                  description?: string | null;
                  checked?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'list';
          }
        | {
            image?: (string | null) | Media;
            alt?: string | null;
            caption?: string | null;
            imageType?: ('fullWidth' | 'bookPreview' | 'regular') | null;
            bookDetails?: {
              bookTitle?: string | null;
              author?: string | null;
              publisher?: string | null;
              isbn?: string | null;
              pages?: number | null;
              price?: string | null;
              description?: string | null;
              downloadLink?: string | null;
              previewPages?: number | null;
            };
            fullWidth?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'image';
          }
        | {
            url?: string | null;
            title?: string | null;
            start?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'youtube';
          }
        | {
            buttons?:
              | {
                  text?: string | null;
                  url?: string | null;
                  variant?: ('primary' | 'secondary') | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'buttonRow';
          }
        | {
            html?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'htmlEmbed';
          }
        | {
            title?: string | null;
            columns?:
              | {
                  name?: string | null;
                  id?: string | null;
                }[]
              | null;
            rows?:
              | {
                  cells?:
                    | {
                        value?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'table';
          }
        | {
            /**
             * Upload a PDF file to preview inline
             */
            file?: (string | null) | Media;
            title?: string | null;
            height?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pdf';
          }
        | {
            title: string;
            author: string;
            publisher?: string | null;
            isbn?: string | null;
            pages?: number | null;
            price?: string | null;
            description?: string | null;
            coverImage?: (string | null) | Media;
            previewImages?:
              | {
                  image: string | Media;
                  pageNumber?: number | null;
                  caption?: string | null;
                  id?: string | null;
                }[]
              | null;
            downloadLink?: string | null;
            buyLink?: string | null;
            rating?: number | null;
            featured?: boolean | null;
            categories?: ('jee' | 'neet' | 'sat' | 'study' | 'practice' | 'reference')[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage download folders for different exam types
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download-menus".
 */
export interface DownloadMenu {
  id: string;
  /**
   * Sequential download menu ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the download folder/menu (e.g., Study Material, Sample Papers)
   */
  menuName: string;
  /**
   * Select the exam this download folder is for
   */
  exam: string | Exam;
  /**
   * Select the category this download folder belongs to
   */
  category: string | ExamCategory;
  /**
   * SEO title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO description for search engines
   */
  seo_description?: string | null;
  /**
   * SEO keywords for search engines
   */
  seo_keywords?: string | null;
  /**
   * Order in which this menu appears (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Sub folders that belong to this download folder (auto-populated)
   */
  subFolders?: (string | SubFolder)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Organize content within download menus using sub folders
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub-folders".
 */
export interface SubFolder {
  id: string;
  /**
   * Sequential sub folder ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the sub folder/menu (e.g., Physics Sample Papers, Chemistry Notes)
   */
  subMenuName: string;
  /**
   * Select which download folder this sub folder belongs to
   */
  menuId: string | DownloadMenu;
  /**
   * Display order within the parent menu (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Add multiple files for this sub folder
   */
  files?:
    | {
        /**
         * e.g., Physics Test 9, Chemistry Test 1 Solutions
         */
        title: string;
        /**
         * Enter the URL of the file
         */
        url: string;
        /**
         * Select the type of file
         */
        fileType: 'PDF File' | 'Word Document' | 'Excel Sheet' | 'Image' | 'Video' | 'Other';
        /**
         * Whether this file requires contact form submission to download
         */
        locked?: boolean | null;
        /**
         * Display order within sub folder (lower numbers first)
         */
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage exam information and study materials
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-info".
 */
export interface ExamInfo {
  id: string;
  /**
   * Sequential exam info ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the menu item (e.g., JEE Main Study Guide, NEET Preparation Materials)
   */
  menuName: string;
  /**
   * Select the exam this information is for
   */
  exam: string | Exam;
  /**
   * Select the category this information belongs to
   */
  category: string | ExamCategory;
  /**
   * SEO title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO description for search engines
   */
  seo_description?: string | null;
  /**
   * SEO keywords for search engines
   */
  seo_keywords?: string | null;
  /**
   * Order in which this information appears (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Add multiple files for this sub folder
   */
  files?:
    | {
        /**
         * e.g., Physics Test 9, Chemistry Test 1 Solutions
         */
        title: string;
        /**
         * Enter the URL of the file
         */
        url: string;
        /**
         * Select the type of file
         */
        fileType: 'PDF File' | 'Word Document' | 'Excel Sheet' | 'Image' | 'Video' | 'Other';
        /**
         * Display order within sub folder (lower numbers first)
         */
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Organize exam information using sub information sections
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-sub-info".
 */
export interface ExamSubInfo {
  id: string;
  /**
   * Sequential sub info ID (auto-generated)
   */
  customId: number;
  /**
   * Name of the sub menu item
   */
  subMenuName: string;
  /**
   * Select which exam information this sub info belongs to
   */
  menuId: string | ExamInfo;
  /**
   * SEO title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO description for search engines
   */
  seo_description?: string | null;
  /**
   * SEO keywords for search engines
   */
  seo_keywords?: string | null;
  /**
   * Display order within the parent exam info (lower numbers appear first)
   */
  order?: number | null;
  layout?:
    | (
        | {
            headline?: string | null;
            subheadline?: string | null;
            background?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            title?: string | null;
            listType?: ('bullet' | 'number' | 'checklist') | null;
            items?:
              | {
                  text: string;
                  description?: string | null;
                  checked?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'list';
          }
        | {
            image?: (string | null) | Media;
            alt?: string | null;
            caption?: string | null;
            imageType?: ('fullWidth' | 'bookPreview' | 'regular') | null;
            bookDetails?: {
              bookTitle?: string | null;
              author?: string | null;
              publisher?: string | null;
              isbn?: string | null;
              pages?: number | null;
              price?: string | null;
              description?: string | null;
              downloadLink?: string | null;
              previewPages?: number | null;
            };
            fullWidth?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'image';
          }
        | {
            url?: string | null;
            title?: string | null;
            start?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'youtube';
          }
        | {
            buttons?:
              | {
                  text?: string | null;
                  url?: string | null;
                  variant?: ('primary' | 'secondary') | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'buttonRow';
          }
        | {
            html?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'htmlEmbed';
          }
        | {
            title?: string | null;
            columns?:
              | {
                  name?: string | null;
                  id?: string | null;
                }[]
              | null;
            rows?:
              | {
                  cells?:
                    | {
                        value?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'table';
          }
        | {
            /**
             * Upload a PDF file to preview inline
             */
            file?: (string | null) | Media;
            title?: string | null;
            height?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pdf';
          }
        | {
            title: string;
            author: string;
            publisher?: string | null;
            isbn?: string | null;
            pages?: number | null;
            price?: string | null;
            description?: string | null;
            coverImage?: (string | null) | Media;
            previewImages?:
              | {
                  image: string | Media;
                  pageNumber?: number | null;
                  caption?: string | null;
                  id?: string | null;
                }[]
              | null;
            downloadLink?: string | null;
            buyLink?: string | null;
            rating?: number | null;
            featured?: boolean | null;
            categories?: ('jee' | 'neet' | 'sat' | 'study' | 'practice' | 'reference')[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage blog comments
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comments".
 */
export interface BlogComment {
  id: string;
  /**
   * Sequential comment ID (auto-generated)
   */
  customId: number;
  /**
   * Select the blog post this comment belongs to
   */
  blog: string | Post;
  /**
   * Name of the comment author
   */
  author_name: string;
  /**
   * Email address of the comment author
   */
  author_email: string;
  /**
   * IP address of the comment author
   */
  comment_author_ip?: string | null;
  /**
   * Date and time when the comment was posted
   */
  comment_date: string;
  /**
   * The actual content of the comment
   */
  content: string;
  /**
   * Approval status of the comment
   */
  status: 'approved' | 'unapproved';
  /**
   * Replies to this comment (auto-populated)
   */
  replies?: (string | BlogCommentReply)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage replies to blog comments
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comment-replies".
 */
export interface BlogCommentReply {
  id: string;
  /**
   * Sequential reply ID (auto-generated)
   */
  customId: number;
  /**
   * Select the comment this reply belongs to
   */
  comment: string | BlogComment;
  /**
   * The actual content of the reply
   */
  reply_content: string;
  /**
   * Name of the reply author
   */
  reply_author_name: string;
  /**
   * Email address of the reply author
   */
  reply_author_email: string;
  /**
   * IP address of the reply author
   */
  reply_author_ip?: string | null;
  /**
   * Date and time when the reply was posted
   */
  reply_date: string;
  /**
   * Approval status of the reply
   */
  status: 'approved' | 'unapproved';
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage courses and educational content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: string;
  /**
   * Sequential course ID (auto-generated)
   */
  customId: number;
  /**
   * Select the exam category this course belongs to
   */
  category: string | ExamCategory;
  /**
   * Name of the course
   */
  course_name: string;
  /**
   * Brief description of the course
   */
  course_short_description: string;
  /**
   * Detailed description of the course content
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Course price in your currency
   */
  price: number;
  /**
   * Course rating (0-5 stars)
   */
  rating?: number | null;
  /**
   * Course review or feedback
   */
  review?: string | null;
  /**
   * Course start date
   */
  start_date: string;
  /**
   * Course duration in minutes
   */
  duration: number;
  /**
   * Current number of enrolled students
   */
  student_count?: number | null;
  /**
   * Whether the course is online or offline
   */
  course_type: 'online' | 'offline';
  /**
   * Academic level the course is designed for
   */
  course_level:
    | 'going_to_9th'
    | 'going_to_10th'
    | 'going_to_11th'
    | 'going_to_12th'
    | '12th_pass'
    | 'graduate'
    | 'post_graduate';
  /**
   * Any additional relevant information about the course
   */
  other_details?: string | null;
  /**
   * Name of the faculty teaching the course
   */
  faculty_name: string;
  /**
   * Image of the faculty member
   */
  faculty_image?: (string | null) | Media;
  /**
   * Main image for the course
   */
  course_image?: (string | null) | Media;
  /**
   * Introductory or promotional video for the course
   */
  course_video?: (string | null) | Media;
  /**
   * SEO-optimized title for search engines
   */
  seo_title?: string | null;
  /**
   * SEO-optimized description for search engines
   */
  seo_description?: string | null;
  /**
   * Keywords for search engine optimization
   */
  seo_keywords?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'exam';
        value: string | Exam;
      } | null)
    | ({
        relationTo: 'leads';
        value: string | Lead;
      } | null)
    | ({
        relationTo: 'post';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'download-menus';
        value: string | DownloadMenu;
      } | null)
    | ({
        relationTo: 'sub-folders';
        value: string | SubFolder;
      } | null)
    | ({
        relationTo: 'exam-category';
        value: string | ExamCategory;
      } | null)
    | ({
        relationTo: 'exam-info';
        value: string | ExamInfo;
      } | null)
    | ({
        relationTo: 'exam-sub-info';
        value: string | ExamSubInfo;
      } | null)
    | ({
        relationTo: 'blog-comments';
        value: string | BlogComment;
      } | null)
    | ({
        relationTo: 'blog-comment-replies';
        value: string | BlogCommentReply;
      } | null)
    | ({
        relationTo: 'courses';
        value: string | Course;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  customId?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  customId?: T;
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam_select".
 */
export interface ExamSelect<T extends boolean = true> {
  customId?: T;
  examName?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads_select".
 */
export interface LeadsSelect<T extends boolean = true> {
  customId?: T;
  name?: T;
  email?: T;
  country?: T;
  countryCode?: T;
  mobile?: T;
  class?: T;
  message?: T;
  submissionDetails?:
    | T
    | {
        ipAddress?: T;
        referrerUrl?: T;
        currentUrl?: T;
        timestamp?: T;
        source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post_select".
 */
export interface PostSelect<T extends boolean = true> {
  customId?: T;
  title?: T;
  slug?: T;
  description?: T;
  exam?: T;
  category?: T;
  seo_title?: T;
  seo_description?: T;
  seo_keywords?: T;
  created_by?: T;
  updated_by?: T;
  blog_image?: T;
  status?: T;
  publishedDate?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              headline?: T;
              subheadline?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              body?: T;
              id?: T;
              blockName?: T;
            };
        list?:
          | T
          | {
              title?: T;
              listType?: T;
              items?:
                | T
                | {
                    text?: T;
                    description?: T;
                    checked?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        image?:
          | T
          | {
              image?: T;
              alt?: T;
              caption?: T;
              imageType?: T;
              bookDetails?:
                | T
                | {
                    bookTitle?: T;
                    author?: T;
                    publisher?: T;
                    isbn?: T;
                    pages?: T;
                    price?: T;
                    description?: T;
                    downloadLink?: T;
                    previewPages?: T;
                  };
              fullWidth?: T;
              id?: T;
              blockName?: T;
            };
        youtube?:
          | T
          | {
              url?: T;
              title?: T;
              start?: T;
              id?: T;
              blockName?: T;
            };
        buttonRow?:
          | T
          | {
              buttons?:
                | T
                | {
                    text?: T;
                    url?: T;
                    variant?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        htmlEmbed?:
          | T
          | {
              html?: T;
              id?: T;
              blockName?: T;
            };
        table?:
          | T
          | {
              title?: T;
              columns?:
                | T
                | {
                    name?: T;
                    id?: T;
                  };
              rows?:
                | T
                | {
                    cells?:
                      | T
                      | {
                          value?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        pdf?:
          | T
          | {
              file?: T;
              title?: T;
              height?: T;
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              title?: T;
              author?: T;
              publisher?: T;
              isbn?: T;
              pages?: T;
              price?: T;
              description?: T;
              coverImage?: T;
              previewImages?:
                | T
                | {
                    image?: T;
                    pageNumber?: T;
                    caption?: T;
                    id?: T;
                  };
              downloadLink?: T;
              buyLink?: T;
              rating?: T;
              featured?: T;
              categories?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download-menus_select".
 */
export interface DownloadMenusSelect<T extends boolean = true> {
  customId?: T;
  menuName?: T;
  exam?: T;
  category?: T;
  seo_title?: T;
  seo_description?: T;
  seo_keywords?: T;
  sortOrder?: T;
  subFolders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub-folders_select".
 */
export interface SubFoldersSelect<T extends boolean = true> {
  customId?: T;
  subMenuName?: T;
  menuId?: T;
  order?: T;
  files?:
    | T
    | {
        title?: T;
        url?: T;
        fileType?: T;
        locked?: T;
        order?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-category_select".
 */
export interface ExamCategorySelect<T extends boolean = true> {
  customId?: T;
  categoryName?: T;
  exams?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-info_select".
 */
export interface ExamInfoSelect<T extends boolean = true> {
  customId?: T;
  menuName?: T;
  exam?: T;
  category?: T;
  seo_title?: T;
  seo_description?: T;
  seo_keywords?: T;
  sortOrder?: T;
  files?:
    | T
    | {
        title?: T;
        url?: T;
        fileType?: T;
        order?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exam-sub-info_select".
 */
export interface ExamSubInfoSelect<T extends boolean = true> {
  customId?: T;
  subMenuName?: T;
  menuId?: T;
  seo_title?: T;
  seo_description?: T;
  seo_keywords?: T;
  order?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              headline?: T;
              subheadline?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              body?: T;
              id?: T;
              blockName?: T;
            };
        list?:
          | T
          | {
              title?: T;
              listType?: T;
              items?:
                | T
                | {
                    text?: T;
                    description?: T;
                    checked?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        image?:
          | T
          | {
              image?: T;
              alt?: T;
              caption?: T;
              imageType?: T;
              bookDetails?:
                | T
                | {
                    bookTitle?: T;
                    author?: T;
                    publisher?: T;
                    isbn?: T;
                    pages?: T;
                    price?: T;
                    description?: T;
                    downloadLink?: T;
                    previewPages?: T;
                  };
              fullWidth?: T;
              id?: T;
              blockName?: T;
            };
        youtube?:
          | T
          | {
              url?: T;
              title?: T;
              start?: T;
              id?: T;
              blockName?: T;
            };
        buttonRow?:
          | T
          | {
              buttons?:
                | T
                | {
                    text?: T;
                    url?: T;
                    variant?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        htmlEmbed?:
          | T
          | {
              html?: T;
              id?: T;
              blockName?: T;
            };
        table?:
          | T
          | {
              title?: T;
              columns?:
                | T
                | {
                    name?: T;
                    id?: T;
                  };
              rows?:
                | T
                | {
                    cells?:
                      | T
                      | {
                          value?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        pdf?:
          | T
          | {
              file?: T;
              title?: T;
              height?: T;
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              title?: T;
              author?: T;
              publisher?: T;
              isbn?: T;
              pages?: T;
              price?: T;
              description?: T;
              coverImage?: T;
              previewImages?:
                | T
                | {
                    image?: T;
                    pageNumber?: T;
                    caption?: T;
                    id?: T;
                  };
              downloadLink?: T;
              buyLink?: T;
              rating?: T;
              featured?: T;
              categories?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comments_select".
 */
export interface BlogCommentsSelect<T extends boolean = true> {
  customId?: T;
  blog?: T;
  author_name?: T;
  author_email?: T;
  comment_author_ip?: T;
  comment_date?: T;
  content?: T;
  status?: T;
  replies?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comment-replies_select".
 */
export interface BlogCommentRepliesSelect<T extends boolean = true> {
  customId?: T;
  comment?: T;
  reply_content?: T;
  reply_author_name?: T;
  reply_author_email?: T;
  reply_author_ip?: T;
  reply_date?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  customId?: T;
  category?: T;
  course_name?: T;
  course_short_description?: T;
  description?: T;
  price?: T;
  rating?: T;
  review?: T;
  start_date?: T;
  duration?: T;
  student_count?: T;
  course_type?: T;
  course_level?: T;
  other_details?: T;
  faculty_name?: T;
  faculty_image?: T;
  course_image?: T;
  course_video?: T;
  seo_title?: T;
  seo_description?: T;
  seo_keywords?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}